package = (
struct(
  package = struct( pkgName = "re2", pkgVersion = "0.2", ),
  license = "MIT",
  licenseFiles = [ "license.txt", ],
  copyright = "",
  maintainer = "Andrey Sverdlichenko <blaze@ruddy.ru>",
  author = "John Millikin <john@john-millikin.com>",
  stability = "experimental",
  testedWith = [ ],
  homepage = "https://github.com/rblaze/haskell-re2#readme",
  pkgUrl = "",
  bugReports = "",
  sourceRepos =
    [ struct(
        repoKind = "RepoHead",
        repoType = "Git",
        repoLocation = "https://github.com/rblaze/haskell-re2",
        repoModule = None,
        repoBranch = None,
        repoTag = None,
        repoSubdir = None,
      ),
    ],
  synopsis = "Bindings to the re2 regular expression library",
  description =
    "re2 is a regular expression library offering predictable run-time and\nmemory consumption. This package is a binding to re2.\n\nSupported expression syntax is documented at\n<https://github.com/google/re2/>\n\n>$ ghci -XOverloadedStrings\n>ghci> import Regex.RE2\n>\n>ghci> find \"\\\\w+\" \"hello world\"\n>Just (Match [Just \"hello\"])\n>\n>ghci> find \"\\\\w+$\" \"hello world\"\n>Just (Match [Just \"world\"])\n>\n>ghci> find \"^\\\\w+$\" \"hello world\"\n>Nothing",
  category = "Regex",
  customFieldsPD = [ ],
  buildDepends = [ ],
  specVersionRaw = None,
  buildType = "Simple",
  setupBuildInfo = None,
  library =
    struct(
      libName = None,
      exposedModules = [ "Regex.RE2", ],
      reexportedModules = [ ],
      signatures = [ ],
      libExposed = True,
      libBuildInfo =
        struct(
          buildable = True,
          buildTools = [ ],
          buildToolDepends = [ ],
          cppOptions = [ ],
          ccOptions =
            [ "-Wall",
              "-pthread",
              "-Wno-sign-compare",
              "-DNDEBUG",
              "-std=c++11",
            ],
          ldOptions = [ ],
          pkgconfigDepends = [ ],
          frameworks = [ ],
          extraFrameworkDirs = [ ],
          cSources = [ "cbits/haskell-re2.cc", ],
          jsSources = [ ],
          hsSourceDirs = [ "lib", ],
          otherModules = [ ],
          autogenModules = [ ],
          defaultLanguage = None,
          otherLanguages = [ ],
          defaultExtensions = [ ],
          otherExtensions = [ ],
          oldExtensions = [ ],
          extraLibs = [ "stdc++", "pthread", "re2", ],
          extraGHCiLibs = [ ],
          extraLibDirs = [ ],
          includeDirs = [ ],
          includes = [ ],
          installIncludes = [ ],
          options = [ ( "ghc", [ "-Wall", ], ), ],
          profOptions = [ ],
          sharedOptions = [ ],
          customFieldsBI = [ ],
          targetBuildDepends =
            [ struct( name = "base", version = ">=4.7 && <5.0", ),
              struct( name = "bytestring", version = ">=0.10.2", ),
              struct( name = "vector", version = "-any", ),
            ],
          mixins = [ ],
        ),
    ),
  subLibraries = [ ],
  executables = [ ],
  foreignLibs = [ ],
  testSuites =
    [ struct(
        testName = "tests",
        testInterface =
          struct(
            type = "exitcode-stdio-1.0",
            version = "1.0",
            mainIs = "tests/Tests.hs",
          ),
        testBuildInfo =
          struct(
            buildable = True,
            buildTools = [ ],
            buildToolDepends = [ ],
            cppOptions = [ ],
            ccOptions = [ ],
            ldOptions = [ ],
            pkgconfigDepends = [ ],
            frameworks = [ ],
            extraFrameworkDirs = [ ],
            cSources = [ ],
            jsSources = [ ],
            hsSourceDirs = [ ],
            otherModules = [ ],
            autogenModules = [ ],
            defaultLanguage = None,
            otherLanguages = [ ],
            defaultExtensions = [ ],
            otherExtensions = [ ],
            oldExtensions = [ ],
            extraLibs = [ ],
            extraGHCiLibs = [ ],
            extraLibDirs = [ ],
            includeDirs = [ ],
            includes = [ ],
            installIncludes = [ ],
            options = [ ( "ghc", [ "-Wall", ], ), ],
            profOptions = [ ],
            sharedOptions = [ ],
            customFieldsBI = [ ],
            targetBuildDepends =
              [ struct( name = "re2", version = "-any", ),
                struct( name = "base", version = ">=4.7 && <5.0", ),
                struct( name = "bytestring", version = "-any", ),
                struct( name = "HUnit", version = "-any", ),
                struct( name = "vector", version = "-any", ),
              ],
            mixins = [ ],
          ),
      ),
    ],
  benchmarks = [ ],
  dataFiles = [ ],
  dataDir = "",
  extraSrcFiles = [ "cbits/haskell-re2.cc", "cbits/haskell-re2.h", ],
  extraTmpFiles = [ ],
  extraDocFiles = [ ],
)
)
